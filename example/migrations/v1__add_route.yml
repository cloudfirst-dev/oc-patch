rollForward:
- action: create
  spec:
    apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        app: frontend
      name: frontend
    spec:
      lookupPolicy:
        local: false
- action: create
  spec:
    apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        app: frontend
      name: frontend
    spec:
      failedBuildsHistoryLimit: 5
      nodeSelector: null
      output:
        to:
          kind: ImageStreamTag
          name: 'frontend:latest'
      postCommit: {}
      resources: {}
      runPolicy: Serial
      source:
        git:
          ref: master
          uri: 'https://github.com/cloudfirst-dev/jenkins-servicenow-example.git'
        type: Git
      strategy:
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: 'nodejs:10'
            namespace: openshift
        type: Source
      successfulBuildsHistoryLimit: 5
      triggers: []
- action: create
  spec:
    apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      name: frontend
      labels:
        app: frontend
    spec:
      replicas: 1
      selector:
        deploymentconfig: frontend
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: frontend
            deploymentconfig: frontend
        spec:
          containers:
            - imagePullPolicy: Always
              name: frontend
              ports:
                - containerPort: 8080
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
      triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
            - frontend
          from:
            kind: ImageStreamTag
            name: 'frontend:latest'
        type: ImageChange
      - type: ConfigChange
- action: create
  spec:
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: frontend
      name: frontend
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        deploymentconfig: frontend
      sessionAffinity: None
      type: ClusterIP
- action: create
  spec:
    apiVersion: v1
    kind: Route
    metadata:
      name: frontend
    spec:
      to:
        kind: Service
        name: frontend
rollBack:
- action: delete
  spec:
    apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      name: frontend
- action: delete
  spec:
    apiVersion: v1
    kind: Route
    metadata:
      name: frontend
- action: delete
  spec:
    apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      name: frontend
- action: delete
  spec:
    apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      name: frontend
- action: delete
  spec:
    apiVersion: v1
    kind: Service
    metadata:
      name: frontend